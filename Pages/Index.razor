@inject HttpClient client
@using System.Text.Json
@using System.Net.Http.Json
@using Newtonsoft.Json
@using System.Net.Http.Headers
@using System.Text
@inject SingletonService searchInput
@using System.Net.Http
@page "/"

<h1>Log in</h1>
<ul>
    <li>        
        <input @bind="username" @bind:event="oninput" class="form-control mr-sm-2" type="search" placeholder="Username">
    </li>
    <li>
        <input @bind="password" @bind:event="oninput" class="form-control mr-sm-2" type="search" placeholder="Password">
    </li>
    <li>
        <button @onclick=@Post>Login</button>
    </li>
</ul>
@code{
    public string username {get; set;}
    public string password {get; set;}

    //string stringPayload;
    HttpContent content;
    async Task Post()
    {
    List<char> charsToRemove = new List<char>() { '(', ')', ',', '"',' '};
    IEnumerable<KeyValuePair<string, string>> pairs = new List<KeyValuePair<string,string>>(){
            new KeyValuePair<string, string>("user_name",username),
            new KeyValuePair<string, string>("password",password),
    };

    content = new FormUrlEncodedContent(pairs);

    HttpResponseMessage response = await client.PostAsync("https://europe-central2-userservice-314812.cloudfunctions.net/login", content);
    
    string myResponse = await response.Content.ReadAsStringAsync();
    myResponse = JsonConvert.DeserializeObject<string>(myResponse);
    myResponse = String.Concat(myResponse.Split(charsToRemove.ToArray()));
        if (myResponse.ToString() == "Userfailedtologin"){
            searchInput.displayName = "No such user";
            Console.WriteLine("No such user");

        } else{
            searchInput.displayName = String.Concat(myResponse.Split(charsToRemove.ToArray()));
            searchInput.username = username;
            Console.WriteLine("Username set to: " + searchInput.username);
        }
    }
}
